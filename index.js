const express = require ('express');
const http = require('http');
const path = require('path');
const cors = require('cors');
const fs = require('fs');
const multer = require('multer');

const app = express (); // making an express application
const server = http.createServer(app);

const PORT = process.env.PORT || 5000;

// Added to test socket.io communication
const socket = require ('socket.io');
const { SocketAddress } = require('net');
const io = socket(server);

io.sockets.on('connection', newConnection);
////////////////////////////////////////

// Suppress CORS warning.
app.use(cors());

app.use(express.static(path.join(__dirname, 'public')));

const audioPath = path.join(__dirname, 'nicknameToResults');
const uploadAudio = multer({dest: audioPath});
const uploadAudioDetail = uploadAudio.fields([{name: 'nickname'}, {name: 'audio'}]);

app.get('/test', (req, res) => {
    res.send('Success!');
});

app.post('/upload-audio', uploadAudioDetail, (req, res) => {
    const nickname = req.body.nickname;
    const audio = req.files['audio'][0];

    // Rename the file since its name is automatically generated by multer.
    fs.renameSync(path.join(audioPath, audio.filename), path.join(audioPath, `${nickname}.mp3`));
    res.send('Success!');
    console.log(`Saved ${nickname}.mp3!`);
});

// Handle sockets
function newConnection(socket) {
    console.log('new connection: ' + socket.id);
    socket.on('button-clicked', buttonClicked);

    function buttonClicked() {
        socket.broadcast.emit('button-clicked', "button-clicked");
        console.log('button clicked!');
    }
}

server.listen(PORT, function(){
    console.log(`initiating server at ${ PORT }`);
})
